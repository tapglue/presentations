Golang at Tapglue

Architecture & Lessons Learned
26 Apr 2017

Onur / Alex
@onurakpolat
@xla

* Agenda

- Backgrounds
- Tapglue
	* Motivation
	* Product
	* Stack
	* API Design
	* Architecture & Infra Overview
	* Why Golang?
	* Code Architecture Details
- Lessons Learned
- Q&A

* Motivation

Goal: Increase Retention & Engagement

- Enable apps to be more independent from Facebook.
- Bring down development time from months to days.
- Scaling feeds is (was) hard, make it simple.
- Add value on top of user & interest graphs.

* Product

Social Network as a Services (SNaaS)

Features:

- User accounts
- Connections (Friend or Follower model)
- Events (explicit interactions)
- Feeds (News Feed, Activity Feed, User Feed)
- Push Notifications

.link https://www.tapglue.com

* Stack

.image images/stack.png 245 1000

.link https://stackshare.io/tapglue/tapglue Tapglue Stack details

* API Design

- RESTful
- HTTP
- JSON

.link https://github.com/tapglue/snaas/wiki/retrieve-followers Example Endpoint

* Architecture & Infra overview

.image images/architecture.jpeg 578 800

* Why Golang?

- simplicity
- tooling
- stdlib
- static binary
- performance
- past experience

* Code Architecture

* Lessons learned

* Resources

.link https://www.iron.io/how-we-went-from-30-servers-to-2-go/ Cutting server costs by 90%

.link https://medium.com/building-timehop/why-timehop-chose-go-to-replace-our-rails-app-2855ea1912d#.7c46yyhmp Making response times 10x faster

.link https://medium.com/@tjholowaychuk/farewell-node-js-4ba9e7f3e52b#.qc0ov3nih Moved to go two years ago

.link http://jimplush.com/talk/2015/12/19/moving-a-team-from-scala-to-golang/ Moving a team from Scala to Golang
